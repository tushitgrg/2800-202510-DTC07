"use client";

import { useEffect, forwardRef, useImperativeHandle, useRef } from "react";

// Link weather conditions to MP3 file paths
const musicFiles = {
  sunny: "/music/sunny.mp3",
  rainy: "/music/rainy.mp3",
  cloudy: "/music/cloudy.mp3",
  snowy: "/music/snowy.mp3",
};

// forwardRef allows this component to expose a ref-based API to its parent (can access play/pause)
const MusicBackground = forwardRef(({ weatherCondition }, ref) => {
  // Create a ref with no DOM element until React mounts DOM
  const audioRef = useRef(null);

  // Hook to update audio only when the weatherCondition changes
  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.src = musicFiles[weatherCondition];
      audioRef.current.load();
    }
  }, [weatherCondition]);

  // Expose custom functions to parent component. Generated by ChatGPT 4.0
  useImperativeHandle(ref, () => ({
    playMusic: () => {
      if (audioRef.current) {
        audioRef.current.play().catch((err) => {
          console.warn("Playback failed:", err);
        });
      }
    },
    pauseMusic: () => {
      if (audioRef.current) {
        audioRef.current.pause();
      }
    },
  }));

  // Render an audio element that loops and is invisible in the DOM
  return <audio ref={audioRef} loop hidden />;
});

export default MusicBackground;
